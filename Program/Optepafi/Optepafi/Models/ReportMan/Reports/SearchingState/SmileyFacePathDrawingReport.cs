using Optepafi.Models.GraphicsMan.Sources;
using Optepafi.Models.SearchingAlgorithmMan.SearchingStates;

namespace Optepafi.Models.ReportMan.Reports.SearchingState;

/// <summary>
/// Represents report of smiley face drawing algorithms state. It reports which facial object was drawn the most recently and it bears its preview graphics to be shown to user.
/// For more information on searching reports see <see cref="ISearchingReport"/>.
/// </summary>
/// <param name="DrawingStateGraphics">Graphics of the most recently drawn objects which can be shown to user.</param>
/// <param name="LastDrawnSmileyFaceObject">Indication of the most recently drawn object.</param>
/// <param name="LastDrawnSmileyFaceObjectsAssociatedLegOrder">Indicates which leg of track is the most recently drawn object associated to.</param>
public record class SmileyFacePathDrawingReport(
    IGraphicsSource DrawingStateGraphics,
    SmileyFacePathDrawingReport.SmileyFaceObject LastDrawnSmileyFaceObject,
    int LastDrawnSmileyFaceObjectsAssociatedLegOrder) : ISearchingReport
{
    /// <summary>
    /// Indicators of smiley face objects associated with objects generated by <c>SmileyFacesDrawer</c> searching algorithm.
    /// </summary>
    public enum SmileyFaceObject {LeftEye, RightEye, Nose, Mouth}
    
    /// <inheritdoc cref="ISearchingReport"/>
    public TOut AcceptGeneric<TOut, TOtherParams>(ISearchingReportGenericVisitor<TOut, TOtherParams> genericVisitor, TOtherParams otherParams) { return genericVisitor.GenericVisit(this, otherParams);  } 
    /// <inheritdoc cref="ISearchingReport"/>
    public TOut AcceptGeneric<TOut>(ISearchingReportGenericVisitor<TOut> genericVisitor) { return genericVisitor.GenericVisit(this); }
}